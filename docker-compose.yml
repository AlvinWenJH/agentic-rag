version: '3.8'

x-basic-config: &basic-config
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
      labels: "service,version"

services:
  # FastAPI Backend
  backend:
    build: .
    container_name: vectorless-rag-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
      - minio
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    <<: *basic-config

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: vectorless-rag-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=vectorless_rag
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    <<: *basic-config 

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: vectorless-rag-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    <<: *basic-config 

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: vectorless-rag-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    <<: *basic-config 

  # MinIO Client for bucket initialization
  minio-client:
    image: minio/mc:latest
    container_name: vectorless-rag-minio-client
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/documents --ignore-existing;
      /usr/bin/mc mb myminio/images --ignore-existing;
      /usr/bin/mc policy set public myminio/documents;
      /usr/bin/mc policy set public myminio/images;
      echo 'MinIO buckets created successfully';
      "
    restart: "no"
    <<: *basic-config 

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  default:
    name: vectorless-rag-network